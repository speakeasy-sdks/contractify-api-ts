/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateRelationSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "security, scheme=true;type=oauth2;name=Authorization" })
    oAuth2: string;

    @SpeakeasyMetadata({
        data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
    })
    personalAccessToken: string;
}

export class CreateRelationRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    relationWrite?: shared.RelationWrite;

    /**
     * Id of the company
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=company" })
    company: number;
}

export class CreateRelation422ApplicationJSONErrors extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "errors" })
    errors?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "field" })
    field?: string;
}

/**
 * Invalid data posted
 */
export class CreateRelation422ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: CreateRelation422ApplicationJSONErrors })
    @Expose({ name: "errors" })
    @Type(() => CreateRelation422ApplicationJSONErrors)
    errors?: CreateRelation422ApplicationJSONErrors[];

    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;
}

/**
 * Forbidden
 */
export class CreateRelation403ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;
}

/**
 * Unauthenticated
 */
export class CreateRelation401ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;
}

/**
 * Created
 */
export class CreateRelation201ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => shared.RelationRead)
    data?: shared.RelationRead;
}

export class CreateRelationResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * Created
     */
    @SpeakeasyMetadata()
    createRelation201ApplicationJSONObject?: CreateRelation201ApplicationJSON;

    /**
     * Unauthenticated
     */
    @SpeakeasyMetadata()
    createRelation401ApplicationJSONObject?: CreateRelation401ApplicationJSON;

    /**
     * Forbidden
     */
    @SpeakeasyMetadata()
    createRelation403ApplicationJSONObject?: CreateRelation403ApplicationJSON;

    /**
     * Invalid data posted
     */
    @SpeakeasyMetadata()
    createRelation422ApplicationJSONObject?: CreateRelation422ApplicationJSON;
}
