/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RFCDate } from "../../types";
import { Expose, Transform } from "class-transformer";

export enum TaskReadDueDateDependsOn {
    TerminationDate = "termination_date",
    EndDate = "end_date",
    StartDate = "start_date",
}

export enum TaskReadStatus {
    Accomplished = "accomplished",
    NotAccomplished = "not_accomplished",
    InProgress = "in_progress",
}

export class TaskRead extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "contract_id" })
    contractId?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "due_date" })
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    dueDate?: RFCDate;

    @SpeakeasyMetadata()
    @Expose({ name: "due_date_depends_on" })
    dueDateDependsOn?: TaskReadDueDateDependsOn;

    @SpeakeasyMetadata()
    @Expose({ name: "due_date_interval" })
    dueDateInterval?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "escalation_date" })
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    escalationDate?: RFCDate;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "owner_id" })
    ownerId?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "permalink" })
    permalink?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "reminder_date" })
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    reminderDate?: RFCDate;

    @SpeakeasyMetadata()
    @Expose({ name: "reminder_duration" })
    reminderDuration?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "repetition_interval" })
    repetitionInterval?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: TaskReadStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title?: string;
}
